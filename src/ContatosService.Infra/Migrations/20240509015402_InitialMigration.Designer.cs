// <auto-generated />
using System;
using ContatosService.Infra.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ContatosService.Infra.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240509015402_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ContatosService.Domain.Entities.Cidade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid?>("RegiaoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RegiaoId");

                    b.ToTable("Cidades", (string)null);
                });

            modelBuilder.Entity("ContatosService.Domain.Entities.Contato", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<Guid?>("RegiaoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RegiaoId");

                    b.ToTable("Contatos", (string)null);
                });

            modelBuilder.Entity("ContatosService.Domain.Entities.Regiao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ddd")
                        .IsRequired()
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Regioes", (string)null);
                });

            modelBuilder.Entity("ContatosService.Domain.Entities.Cidade", b =>
                {
                    b.HasOne("ContatosService.Domain.Entities.Regiao", "Regiao")
                        .WithMany("Cidades")
                        .HasForeignKey("RegiaoId");

                    b.Navigation("Regiao");
                });

            modelBuilder.Entity("ContatosService.Domain.Entities.Contato", b =>
                {
                    b.HasOne("ContatosService.Domain.Entities.Regiao", "Regiao")
                        .WithMany()
                        .HasForeignKey("RegiaoId");

                    b.OwnsOne("ContatosService.Domain.ValueObjects.Telefone", "Telefone", b1 =>
                        {
                            b1.Property<Guid>("ContatoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Ddd")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Ddd");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Numero");

                            b1.HasKey("ContatoId");

                            b1.ToTable("Contatos");

                            b1.WithOwner()
                                .HasForeignKey("ContatoId");
                        });

                    b.Navigation("Regiao");

                    b.Navigation("Telefone");
                });

            modelBuilder.Entity("ContatosService.Domain.Entities.Regiao", b =>
                {
                    b.Navigation("Cidades");
                });
#pragma warning restore 612, 618
        }
    }
}
